"""recreate players, teams, and divisions tables

Revision ID: 0c91c0f6b64f
Revises: 5221e233412f
Create Date: 2024-12-08 15:51:28.641664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0c91c0f6b64f'
down_revision: Union[str, None] = '5221e233412f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the foreign key constraint on the `players` table
    op.drop_constraint('players_team_id_fkey', 'players', type_='foreignkey')
    op.drop_constraint('teams_division_id_fkey', 'teams', type_='foreignkey')
    
    op.drop_index('ix_players_id', table_name='players')
    op.drop_table('players')
    
    op.drop_index('ix_teams_id', table_name='teams')
    op.drop_table('teams')

    op.drop_index('ix_divisions_id', table_name='divisions')
    op.drop_table('divisions')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('divisions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('divisions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='divisions_pkey'),
    sa.UniqueConstraint('name', name='divisions_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_divisions_id', 'divisions', ['id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('teams_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('team_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('division_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['divisions.id'], name='teams_division_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='teams_pkey'),
    sa.UniqueConstraint('team_number', name='teams_team_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_teams_id', 'teams', ['id'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('license_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_captain', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('classification', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ELO_points', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='players_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    sa.UniqueConstraint('email', name='players_email_key'),
    sa.UniqueConstraint('license_number', name='players_license_number_key')
    )
    op.create_index('ix_players_id', 'players', ['id'], unique=False)
    # ### end Alembic commands ###
